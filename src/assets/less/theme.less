@nightPreviewColor: #191919;
@nightCodeMirrorColor: #191919;
@nightActiveCodeMirrorColor: gray;
@nightFontColor: gray;
@nightLinkColor: #8e9eb9;
@nightLinkTextColor: #84868b;
@nightLineColor: #84868b;

.dark {
  .container {
    .output_night {
      .preview {
        background-color: @nightPreviewColor;
        box-shadow: 0 0 70px rgba(0, 0, 0, 0.3);
      }

      .preview-wrapper {
        background-color: @nightCodeMirrorColor;
        box-shadow: inset 0 0 0 1px rgba(233, 231, 231, 0.102);
      }

      .code-snippet__fix {
        background-color: rgb(238, 238, 238);
      }
    }

    ::-webkit-scrollbar {
      background-color: @nightCodeMirrorColor;
    }
  }
}

.CodeMirror {
  padding-bottom: 0;
  height: 100% !important;
  font-size: 14px;
  font-family: 'PingFang SC', BlinkMacSystemFont, Roboto, 'Helvetica Neue',
    sans-serif !important;
}

.CodeMirror-vscrollbar:focus {
  outline: none;
}

.CodeMirror-scroll {
  padding: 0 20px;
  overflow-x: hidden !important;
  overflow-y: scroll !important;
}

.CodeMirror-vscrollbar {
  width: 0px;
  height: 0px;
}

.CodeMirror-wrap {
  padding-top: 20px;
  padding-bottom: 20px;
  box-sizing: border-box;
}

.cm-em {
  font-style: normal;
}

.cm-comment {
  font-style: normal !important;
}

.table-left {
  text-align: left;
  table {
    display: inline;
  }
}

.table-center {
  text-align: center;
  table {
    display: inline;
  }
}

.table-right {
  text-align: right;
  table {
    display: inline;
  }
}

// 自定义样式
.red {
  color: red;
}

.blue {
  color: blue;
}

.green {
  color: green;
}

.bg-red {
  background-color: red;
}

.bg-blue {
  background-color: blue;
}

.bg-green {
  background-color: green;
}

.corner {
  position: relative;
  // width: 400px;
  // height: 300px;
  // border: 1px solid;
}

.corner::before {
  position: absolute;
  top: 0.3rem;
  left: -0.5rem;
  z-index: 1;
  padding-right: 0.625rem;
  font-weight: bold;
  line-height: 0px;
  color: #000;
  height: 0px;
  border: 0.9375rem solid #ee7600;
  border-right-color: transparent;
  content: "标签";
  box-shadow: 0px 0.3125rem 0.3125rem -0.3125rem #000;
}

.corner::after {
  content: "";
  position: absolute;
  top: 2.1875rem;
  left: -0.5rem;
  border: 0.25rem solid #89540c;
  border-left-color: transparent;
  border-bottom-color: transparent;
}

// 折叠样式
.accordion {
  border: 1px solid #ccc;
  width: 300px;
  border-radius: 5px;
  margin: 20px 0;
  overflow: hidden; /* 确保容器不会超出边界 */
}

.accordion input {
  display: none; /* 隐藏 checkbox */
}

.accordion label {
  display: block;
  padding: 10px;
  background-color: #f1f1f1;
  cursor: pointer;
  font-weight: bold;
}

.content {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.3s ease-out;
  background: #fff;
  padding: 0 10px; /* 内部填充 */
}

.accordion input:checked + label + .content {
  max-height: 500px; /* 根据内容的实际高度，适当调整这个值 */
  padding: 10px; /* 显示内容时添加内部间距 */
  transition: max-height 0.5s ease-in; /* 折叠动画 */
}

.content p {
  margin: 0; /* 去除段落外边距 */
}
// 折叠样式
.collapsed {
  display: none!important;
}

// less 取反颜色
@background-color: #00ff00; // 背景色为黑色

// 定义一个函数来取反颜色
.invert-color(@color) {
    // 拆分成红、绿、蓝三个通道
    @r: red(@color);
    @g: green(@color);
    @b: blue(@color);
    
    // 计算反色
    @inverted-r: 255 - @r;
    @inverted-g: 255 - @g;
    @inverted-b: 255 - @b;

    // 设置反色的变量
    @inverted-color: rgb(@inverted-r, @inverted-g, @inverted-b);
}

// 应用样式
.marker, .pieTitleText,  .legend text {
    .invert-color(@background-color); // 调用混入
    fill: @inverted-color!important; // 使用计算的反色
    // background-color: @background-color;
}

.flowchart-link {
  .invert-color(@background-color); // 调用混入
  stroke: @inverted-color!important; // 使用计算的反色
  // background-color: @background-color;
}